---
- name: Install Kubernetes cluster
  hosts: all
  become: true
  gather_facts: true
  tasks:
    - name: Restart chronyd service
      ansible.builtin.systemd:
        name: chronyd
        state: restarted

    - name: Force immediate time sync
      ansible.builtin.command: chronyc makestep

    - name: Wait 10 seconds for time to stabilize
      ansible.builtin.pause:
        seconds: 10

    - name: Verify time is correct
      ansible.builtin.command: date
      register: current_time

    - name: Show synchronized time
      ansible.builtin.debug:
        msg: "Current time on {{ inventory_hostname }}: {{ current_time.stdout }}"

    - name: Update system with 1 hour cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
        upgrade: dist

    - name: Install initial packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - curl
        - containerd

    - name: Create directory /etc/containerd
      ansible.builtin.file:
        owner: root
        group: root
        mode: '0755'
        path: /etc/containerd
        state: directory

    - name: Generate default containerd config (and ensure that it shows the right status - pipefail option)
      ansible.builtin.shell: |
        set -o pipefail
        containerd config default | tee /etc/containerd/config.toml > /dev/null

    - name: Some changes in file
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Reload containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted

    - name: Ensure that /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes repository key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        dest: /tmp/kubernetes-release.key
        mode: '0644'

    - name: Convert the key to a format apt can use
      ansible.builtin.command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-release.key

    - name: Add Kubernetes APT repository
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        mode: '0644'

    - name: Update apt cache after adding Kubernetes repository
      ansible.builtin.apt:
        update_cache: true

    - name: Install Kubernetes package
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold certain packages at their current version
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Disable swap as it is not supported by Kubernetes
      ansible.builtin.command: swapoff -a

    - name: Replace all swap possible entries in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        line: '#&'

    - name: Load overlay and br_netfilter kernel module
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Set sysctl parameters for Kubernetes
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
        owner: root
        group: root
        mode: '0644'

    - name: Reload sysctl settings
      ansible.builtin.command: sysctl --system

- name: Initialize Kubernetes with Flannel pod network
  hosts: master
  become: true
  tasks:
    - name: Initialize Kubernetes with Flannel pod network
      ansible.builtin.command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init_output

    - name: Print the output of kubeadm init
      ansible.builtin.debug:
        var: kubeadm_init_output.stdout

    - name: Generate a new token for worker nodes
      ansible.builtin.command: kubeadm token create --print-join-command
      register: join_command_output

    - name: Print the join command
      ansible.builtin.debug:
        var: join_command_output.stdout

- name: Join worker nodes to the Kubernetes cluster
  hosts: workers
  become: true
  tasks:
    - name: Join worker node to the cluster
      ansible.builtin.command: "{{ hostvars['master1']['join_command_output'].stdout }}"

- name: Join worker nodes to the Kubernetes cluster
  hosts: all
  become: true
  tasks:
    - name: Create .kube directory in home
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        mode: '0755'

    - name: Fetch admin.conf from master node to controller
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: ./admin.conf
        flat: true
      delegate_to: master1

    - name: Copy admin.conf to .kube/config
      ansible.builtin.copy:
        src: ./admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Set ownership of .kube/config
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        state: file
        mode: '0644'

    - name: Set KUBECONFIG environment variable
      ansible.builtin.shell: |
        echo "export KUBECONFIG=/home/{{ ansible_user }}/.kube/config" >> ~/.bashrc
      environment:
        KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"

- name: Apply Flannel network plugin (on master)
  hosts: master
  become: true
  tasks:
    - name: Download Flannel manifest
      ansible.builtin.get_url:
        url: https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
        dest: /tmp/kube-flannel.yml
        mode: '0644'

    - name: Apply Kubernetes manifest using kubectl
      ansible.builtin.command: kubectl apply -f /tmp/kube-flannel.yml
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

- name: Final check and verification
  hosts: all
  tasks:
    - name: Verify the cluster is up and running
      ansible.builtin.command: kubectl get nodes
      register: kubectl_get_nodes_output
      failed_when: kubectl_get_nodes_output.rc != 0

    - name: Display success message
      ansible.builtin.debug:
        msg: "Cluster is up and running, be happy"
      when: kubectl_get_nodes_output.rc == 0
